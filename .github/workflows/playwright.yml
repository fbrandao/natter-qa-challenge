name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      update_snapshots:
        description: 'Update snapshots'
        required: false
        type: boolean
        default: false

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.52.0-jammy
      options: --user 1001
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install Node Dependencies
        run: npm ci

  functional-tests:
    name: Run Functional Tests - Playwright
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.52.0-jammy
      options: --user 1001
    timeout-minutes: 60
    env:
      NODE_ENV: ci
      AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
      AGORA_TOKEN: ${{ secrets.AGORA_TOKEN }}
      AGORA_CHANNEL: ${{ secrets.AGORA_CHANNEL }}
      UPDATE_SNAPSHOTS: ${{ github.event.inputs.update_snapshots || false }}
      LOG_LEVEL: debug
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Node Modules Cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install Node Dependencies
        run: npm ci

      - name: Create Test Report Directory
        run: mkdir -p ctrf/reports/e2e
      - name: Run E2E Tests
        run: |
          if [ "$UPDATE_SNAPSHOTS" = "true" ]; then
            xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" npm run test:e2e:update
          else
            xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" npm run test:e2e
          fi
      - name: List files after E2E Tests
        run: |
          echo "Root directory:" && ls -la
          echo "ctrf/reports/e2e:" && ls -la ctrf/reports/e2e || true
          echo "reports/e2e:" && ls -la reports/e2e || true
          echo "test-results:" && ls -la test-results || true

      - name: Upload E2E Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-report-${{ github.run_id }}
          path: |
            reports/e2e
            ctrf/reports/e2e
          retention-days: 14

      - name: List files after Upload E2E Test Reports
        run: |
          echo "Root directory:" && ls -la
          echo "ctrf/reports/e2e:" && ls -la ctrf/reports/e2e || true
          echo "reports/e2e:" && ls -la reports/e2e || true
          echo "test-results:" && ls -la test-results || true

      - name: Publish CTRF Test Report
        if: always()
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: ctrf/reports/e2e/ctrf.json

      - name: List files after Publish CTRF Test Report
        run: |
          echo "Root directory:" && ls -la
          echo "ctrf/reports/e2e:" && ls -la ctrf/reports/e2e || true
          echo "reports/e2e:" && ls -la reports/e2e || true
          echo "test-results:" && ls -la test-results || true

      - name: Upload Test Snapshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snapshots-${{ github.run_id }}
          path: snapshots/ci
          retention-days: 14

  performance-tests:
    name: Run Performance Tests - Artillery
    needs: [setup, functional-tests]
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ci
      AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
      AGORA_TOKEN: ${{ secrets.AGORA_TOKEN }}
      AGORA_CHANNEL: ${{ secrets.AGORA_CHANNEL }}
      ARTILLERY_API_KEY: ${{ secrets.ARTILLERY_API_KEY }}
      LOG_LEVEL: debug
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Restore Node Modules Cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install Node Dependencies
        run: npm ci

      - name: Run Load Tests
        run: npm run test:performance:record
      - name: List files after Load Tests
        run: |
          echo "Root directory:" && ls -la
          echo "ctrf/reports/e2e:" && ls -la ctrf/reports/e2e || true
          echo "reports/e2e:" && ls -la reports/e2e || true
          echo "test-results:" && ls -la test-results || true

